@mixin mx_animation($name, $duration: 300ms, $delay: 0, $ease: ease, $directon: normal, $iteration: 1) {
    -webkit-animation: $name $duration $delay $ease $directon $iteration;
    -moz-animation: $name $duration $delay $ease $directon $iteration;
    -ms-animation: $name $duration $delay $ease $directon $iteration;
    animation: $name $duration $delay $ease $directon $iteration;

}

@mixin mx_transition($transition) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin mx_delay($delay) {
    -webkit-transition-delay: $delay;
    -moz-transition-delay: $delay;
    -ms-transition-delay: $delay;
    -o-transition-delay: $delay;
    transition-delay: $delay;
}

@mixin mx_transitionDelay($delay) {
    -webkit-transition-delay: $delay;
    -moz-transition-delay: $delay;
    -ms-transition-delay: $delay;
    -o-transition-delay: $delay;
    transition-delay: $delay;
}

@mixin mx_animationDelay($delay) {
    -webkit-animation-delay: $delay;
    -moz-animation-delay: $delay;
    -ms-animation-delay: $delay;
    -o-animation-delay: $delay;
    animation-delay: $delay;
}

@mixin mx_duration($duration) {
    -webkit-transition-duration: $duration;
    -moz-transition-duration: $duration;
    -ms-transition-duration: $duration;
    -o-transition-duration: $duration;
    transition-duration: $duration;
}

@mixin mx_animationDuration($duration) {
    -webkit-animation-duration: $duration;
    -moz-animation-duration: $duration;
    -ms-animation-duration: $duration;
    -o-animation-duration: $duration;
    animation-duration: $duration;
}

@mixin mx_animationName($name) {
    -webkit-animation-name: $name;
    -moz-animation-name: $name;
    -ms-animation-name: $name;
    -o-animation-name: $name;
    animation-name: $name;
}

@mixin mx_transform($string) {
    -webkit-transform: $string;
    -moz-transform: $string;
    -ms-transform: $string;
    -o-transform: $string;
    transform: $string;
}

@mixin mx_scale($factor) {
    -webkit-transform: scale($factor);
    -moz-transform: scale($factor);
    -ms-transform: scale($factor);
    -o-transform: scale($factor);
    transform: scale($factor);
}

@mixin mx_scaleX($factor) {
    -webkit-transform: scaleX($factor);
    -moz-transform: scaleX($factor);
    -ms-transform: scaleX($factor);
    -o-transform: scaleX($factor);
    transform: scaleX($factor);
}

@mixin mx_rotate($deg) {
    -webkit-transform: rotate($deg);
    -moz-transform: rotate($deg);
    -ms-transform: rotate($deg);
    -o-transform: rotate($deg);
    transform: rotate($deg);
}

@mixin mx_translate($x, $y:0) {
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin mx_translate3d($x, $y: 0, $z: 0) {
    -webkit-transform: translate3d($x, $y, $z);
    -moz-transform: translate3d($x, $y, $z);
    -ms-transform: translate3d($x, $y, $z);
    -o-transform: translate3d($x, $y, $z);
    transform: translate3d($x, $y, $z);
}

@mixin mx_perspective($value: 1000) {
    -webkit-perspective: $value;
    -moz-perspective: $value;
    -ms-perspective: $value;
    perspective: $value;
}

@mixin mx_transform-origin($x:center, $y:center) {
    -webkit-transform-origin: $x $y;
    -moz-transform-origin: $x $y;
    -ms-transform-origin: $x $y;
    -o-transform-origin: $x $y;
    transform-origin: $x $y;
}

@mixin mx_o($color: red) {
    outline: $color solid 1px;
}

@mixin keyframe($animation_name) {
    @-webkit-keyframes #{$animation_name} {
        @content;
    }

    @-moz-keyframes #{$animation_name} {
        @content;
    }

    @-o-keyframes #{$animation_name} {
        @content;
    }

    @keyframes #{$animation_name} {
        @content;
    }
}

//RESPONSIVE MIXINS
@mixin mobile() {
    @content;
}

@mixin tablet() {
    @media only screen and (min-width: 40.063em) { //641.008px
        @content;
    }
}

@mixin desktop() {
    @media only screen and (min-width: 64.063em) { //1025.008px
        @content;
    }
}

@mixin desktop-large() {
    @media only screen and (min-width: 90.063em) { //1441.008
        @content;
    }
}

@mixin media-query($min-view-port){
    @media only screen and (min-width: $min-view-port) {
        @content;
    }
}

@mixin mx-font-size($m, $t, $d) {
    font-size: $m;

    @include tablet {
        font-size: $t;
    }

    @include desktop {
        font-size: $d;
    }
}

@mixin mx-letter-spacing($m, $t, $d) {
    letter-spacing: $m;

    @include tablet {
        letter-spacing: $t;
    }

    @include desktop {
        letter-spacing: $d;
    }
}

//PLACEHOLDER
@mixin mx_placeholder($color){
    ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
        color: $color;
    }
    ::-moz-placeholder { /* Firefox 19+ */
        color: $color;
    }
    :-ms-input-placeholder { /* IE 10+ */
        color: $color;
    }
    :-moz-placeholder { /* Firefox 18- */
        color: $color;
    }
}

/* BACKGROUND COLOR MIXINS */
@mixin mx_svg_color($color) {
    svg, path, polygon, rect, polyline, g, line, circle {
        //fill: $color;
        stroke: $color !important;
    }
}

@mixin mx_gradient_bg($color1, $color2) {
    background: $color1;
    background: linear-gradient($color1, $color2);
}

@mixin mx_checkered-bg($bg-color: transparent, $stripes: rgba(255,255,255,.2)) {
    background-color: $bg-color;

    background-image: linear-gradient(transparent 1px, transparent 1px),
    linear-gradient(90deg, transparent 1px, transparent 1px),
    linear-gradient($stripes 1px, transparent 1px),
    linear-gradient(90deg, $stripes 1px, transparent 1px);
    background-size: 100px 100px, 100px 100px, 20px 20px, 20px 20px;
    background-position: -2px -2px, -2px -2px, -1px -1px, -1px -1px;
}
